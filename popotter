#!/usr/bin/env python3
from requests_oauthlib import OAuth1Session

from const import CONSUMER_KEY
from const import CONSUMER_SECRET
from const import ACCESS_TOKEN
from const import ACCESS_TOKEN_SECRET

import readline
import os
import argparse

api = OAuth1Session(CONSUMER_KEY, CONSUMER_SECRET, ACCESS_TOKEN, ACCESS_TOKEN_SECRET)
CONT_PRE_STR = '(続き) '
CONT_POST_STR = ' (続く)'

parser = argparse.ArgumentParser()
parser.add_argument('--post', '-p', metavar='TEXT', type=str, nargs='+')
parser.add_argument('--file', '-f', metavar='TEXT', type=str, nargs='+')

def DivideTweetIfTooLong(tweet):
  global CONT_POST_STR
  global CONT_PRE_STR
  cont_format = '{pre}{str}{post}'
  devided_tweets = []
  if len(tweet) <= 140:
    devided_tweets.append(tweet)
  else:
    i = 0
    while True:
      i += 1
      if i == 1:
        current_cont_pre = ''
        current_cont_post = CONT_POST_STR
      else:
        current_cont_pre = CONT_POST_STR
        current_cont_post = CONT_PRE_STR

      len_append_str = len((current_cont_pre + current_cont_post).format(i=i))

      if len(tweet) > 140-len_append_str:
        current_str = cont_format.format(pre=current_cont_pre.format(i=i-1),
                                         str=tweet[0:140-len_append_str],
                                         post=current_cont_post.format(i=i))
        devided_tweets.append(current_str)
        tweet = tweet[140-len_append_str:]
      else:
        current_str = cont_format.format(pre=CONT_PRE_STR.format(i=i-1),
                                         str=tweet[0:140-len_append_str],
                                         post='')
        devided_tweets.append(current_str)
        break
  return devided_tweets
    
def PostTweet(tweet):
  global api
  devided_tweets = DivideTweetIfTooLong(tweet)
  url = 'https://api.twitter.com/1.1/statuses/update.json'
  for current_str in devided_tweets:
    params = {'status': current_str}
    ret = api.post(url, params = params)

def ReadPostFromFile(path_to_file):
  if os.path.isfile(path_to_file):
    f = open(path_to_file, 'r')
    return f.read()
  else:
    return None

def InteractiveMode():
  print('Interactive Mode')
  print('Ctrl + C or D to exit.')
  try:
    while True:
      tweet = input('Tweet> ')
      PostTweet(tweet)
  except (KeyboardInterrupt, EOFError):
    print('\nGood bye.')


def main():
  global parser
  args = parser.parse_args()
  if args.post == None:
    if args.file == None:
      InteractiveMode()
    else:
      for filename in args.file:
        tweet = ReadPostFromFile(filename)
        if tweet == None:
          print('Designated file does not exit! Pass it.')
        else:
          PostTweet(tweet)
  else:
    for tweet in args.post:
      PostTweet(tweet)


if __name__ == '__main__':
  main()
